version: "3.9"

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    ports: ["9000:9000", "9001:9001"]
    volumes:
      - minio:/data

  opensearch:
    image: opensearchproject/opensearch:2.15.0
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ports: ["9200:9200","9600:9600"]
    ulimits:
      memlock:
        soft: -1
        hard: -1

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports: ["5672:5672", "15672:15672"]

  redis:
    image: redis:7
    ports: ["6379:6379"]

  gateway:
    build:
      context: ../../..
      dockerfile: deploy/docker/gateway.Dockerfile
    environment:
      DMF_ENV: dev
      GATEWAY_PORT: "8080"
    ports: ["8080:8080"]
    depends_on:
      - postgres
      - opensearch

  dms:
    build:
      context: ../../..
      dockerfile: deploy/docker/dms.Dockerfile
    environment:
      DMF_ENV: dev
      DATABASE_URL: postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      OPENSEARCH_URL: http://opensearch:9200
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_BUCKET: ${S3_BUCKET}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      UVICORN_PORT: "8081"
    ports: ["8081:8081"]
    depends_on:
      - postgres
      - minio
      - opensearch

volumes:
  pgdata:
  minio:
